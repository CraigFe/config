
let mapleader = " "

filetype plugin indent on 
if has('nvim')
	let s:editor_root=expand("~/.nvim")
else
	let s:editor_root=expand("~/.vim")
endif

" Configure Vundle
let vundle_installed=1
let vundle_readme=s:editor_root . '/bundle/vundle/README.md'
if !filereadable(vundle_readme)
	echo "Installing Vundle..."
	echo ""

	silent call mkdir(s:editor_root . '/bundle', "p")
	silent execute "!git clone https://github.com/gmarik/vundle " . s:editor_root . "/bundle/vundle"
	let vundle_installed=0
endif
let &rtp = $rtp . ',' . s:editor_root . '/bundle/vundle/'
call vundle#rc(s:editor_root . '/bundle')

Bundle 'chriskempson/base16-vim'

if vundle_installed == 0
	echo "Installing Bundles..."
	echo ""
endif 


" Syntax highlighting
set t_Co=256
syntax on
colorscheme base16-default-dark
set encoding=utf-8
set splitbelow
set splitright 

" Don't try to be compatible with vi
set nocompatible

" Whitespace
set tabstop=4
set shiftwidth=4
set autoindent
set noexpandtab
set breakindent

" Searching
set incsearch " Search incrementally
set hlsearch  " Search highlights cll of the results

" Rendering
set ttyfast
set background=dark
set mouse=a

" Numbering system
set number
set relativenumber

function! ToggleRelativeNumbers()
	if (&relativenumber == 1)
		set norelativenumber
	else
		set relativenumber
	endif
endfunction

" Map gl to toggle numbering between absolute and relative
nnoremap gl :call ToggleRelativeNumbers()<CR>

" Navigation using guides
noremap <Space><Tab> <Esc>/<++><Enter>"_c4l
inoremap <Space><Tab> <Esc>/<++><Enter>"_c4l
vnoremap <Space><Tab> <Esc>/<++><Enter>"_c4l
map <Space><Tab> <Esc>/<++><Enter>"_c4l
inoremap ;gui <++>

" Enable spelling by default for certain filetypes
set spelllang=en_gb

map <F6> :setlocal spell! spelllang=en_uk<CR>

" Goyo plugin: makes text more readable when writing prose
map <F10> :Goyo<CR>
map <leader>f :Goyo \| set linebreak <CR>
inoremap <F10> <esc>:Goyo<CR>a

" Alternatives to <ESC>
inoremap jk <ESC>
inoremap jK <ESC>
inoremap Jk <ESC>
inoremap JK <ESC>
inoremap kj <ESC>
inoremap kJ <ESC>
inoremap Kj <ESC>
inoremap KJ <ESC>

" Build configurations
autocmd FileType tex inoremap <C-B> <Esc>:!xelatex<space><c-r>%<Enter>a
autocmd FileType tex nnoremap <C-B> :!xelatex<space><c-r>%<Enter>

" Default filetypes
au BufRead,BufNewFile *.tex set filetype=tex
au BufRead,BufNewFile *.pl set filetype=prolog " not Perl
au BufRead,BufNewFile rc.conf set filetype=vim

" C-T for a new tab
nnoremap <C-T> :tabnew<cr>
nnoremap <C-W> :tabclose<cr>

" LaTeX Snippets
autocmd FileType tex inoremap ;em \emph{} <++><Esc>T{i
autocmd FileType tex inoremap ;bf \textbf{} <++><Esc>T{i
autocmd FileType tex inoremap ;tt \texttt{}<Space><++><Esc>T{i

autocmd FileType tex inoremap ;m \(\)<Space><++><Esc>T(i
autocmd FileType tex inoremap ;M \[\]<Enter><Enter><++><Esc>2k$hi 
autocmd FileType tex inoremap ;ra \rightarrow
autocmd FileType tex inoremap ;la \leftarrow
autocmd FileType tex inoremap ;lra \leftrightarrow

autocmd FileType tex inoremap ;sec \section{}<Enter><Enter><++><Esc>2kf}i
autocmd FileType tex inoremap ;ssec \subsection{}<Enter><Enter><++><Esc>2kf}i
autocmd FileType tex inoremap ;sssec \subsubsection{}<Enter><Enter><++><Esc>2kf}i
autocmd FileType tex inoremap ;up \usepackage{}<Esc>T{i
autocmd FileType tex inoremap ;dc \documentclass{}<Esc>T{i
autocmd FileType tex inoremap ;en \begin{enumerate}[]<Enter><Backspace>\item<Space><++><Enter><Backspace><Backspace>\end{enumerate}<Enter><Enter><++><Esc>4kf]i
autocmd FileType tex inoremap ;it \begin{itemize}<Enter><Enter>\end{itemize}<Enter><Enter><++><Esc>3kA<Tab>\item<Space>

autocmd FileType tex inoremap ;tab \begin{tabular}<Enter><++><Enter>\end{tabular}<Enter><Enter><++><Esc>4kA{}<Esc>i
autocmd FileType tex inoremap ;btab \begin{tabular}<Enter>\toprule<Enter><++><Enter>\midrule<Enter><++><Enter>\bottomrule<Enter>\end{tabular}<Enter><Enter><++><Esc>8kA{}<Esc>i

