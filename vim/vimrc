" Initialisation: {
	if has('nvim')
		let s:editor_root=expand("~/.nvim")
	else
		let s:editor_root=expand("~/.vim")
	endif
"

" VundleStart: {
	let vundle_installed=1
	let vundle_readme=s:editor_root . '/bundle/vundle/README.md'
	if !filereadable(vundle_readme)
		echo "Installing Vundle..."
	echo ""
		
		if !isdirectory(s:editor_root . '/bundle/')
			silent call mkdir(s:editor_root . '/bundle', "p")
		endif

		silent execute "!git clone https://github.com/gmarik/vundle " . s:editor_root . "/bundle/vundle"
		let vundle_installed=0
	endif
	
	filetype off " Vundle requires this before setting the runtime paths
	let &rtp = &rtp . ',' . s:editor_root . '/bundle/vundle/'
	call vundle#rc(s:editor_root . '/bundle')
	
	Plugin 'VundleVim/Vundle.vim'
" }

" Plugins: {
	" Behavioural: {
		Plugin 'ying17zi/vim-live-latex-preview', { 'for': 'tex' }
		Plugin 'LaTeX-Box-Team/LaTeX-Box', { 'for': 'tex' }
		Plugin 'tpope/vim-surround'
		Plugin 'scrooloose/nerdcommenter'
		Plugin 'scrooloose/nerdtree'
		Plugin 'Xuyuanp/nerdtree-git-plugin'
		Plugin 'ctrlpvim/ctrlp.vim'
	" }

	" Cosmetic: {
		Plugin 'vim-airline/vim-airline'
		Plugin 'scrooloose/syntastic' 
		Plugin 'morhetz/gruvbox'
	" }
" }

" VundleEnd: {
	call vundle#end()
	filetype plugin indent on 
" }

set t_Co=16
syntax enable
set encoding=utf-8

set splitbelow
set splitright 

" Don't try to be compatible with vi
set nocompatible

" Whitespace
set tabstop=4
set shiftwidth=4
set autoindent
set noexpandtab
set breakindent

" Remove auto commenting on newlines
autocmd FileType * setlocal formatoptions-=c formatoptions-=r formatoptions-=o

" Searching
set incsearch " Search incrementally
set hlsearch  " Search highlights cll of the results

" Rendering
set ttyfast
set mouse=a

" Numbering system
set number
set relativenumber

function! ToggleRelativeNumbers()
	if (&relativenumber == 1)
		set norelativenumber
	else
		set relativenumber
	endif
endfunction

" Map gl to toggle numbering between absolute and relative
nnoremap gl :call ToggleRelativeNumbers()<CR>

" Navigation using guides
noremap <Space><Tab> <Esc>/<++><Enter>"_c4l
inoremap <Space><Tab> <Esc>/<++><Enter>"_c4l
vnoremap <Space><Tab> <Esc>/<++><Enter>"_c4l
map <Space><Tab> <Esc>/<++><Enter>"_c4l
inoremap ;gui <++>

" Enable spelling by default for certain filetypes
set spelllang=en_gb

map <F6> :setlocal spell! spelllang=en_uk<CR>

" Alternatives to <ESC>
inoremap jk <ESC>
inoremap jK <ESC>
inoremap Jk <ESC>
inoremap JK <ESC>
inoremap kj <ESC>
inoremap kJ <ESC>
inoremap Kj <ESC>
inoremap KJ <ESC>

" Ctrl-P configuration
let g:ctrlp_show_hidden = 1
let g:ctrlp_max_files = 0

" See the current syntax highlighting group
map <F10> :echo "hi<" . synIDattr(synID(line("."),col("."),1),"name") . '> trans<'
\ . synIDattr(synID(line("."),col("."),0),"name") . "> lo<"
\ . synIDattr(synIDtrans(synID(line("."),col("."),1)),"name") . ">"<CR>

set background=dark
silent! colorscheme gruvbox
hi Normal ctermbg=none " Disable the background color

" Build configurations
autocmd FileType tex inoremap <C-B> <Esc>:!xelatex<space><c-r>%<Enter>a
autocmd FileType tex nnoremap <C-B> :!xelatex<space><c-r>%<Enter>

" Default filetypes
au BufRead,BufNewFile *.tex set filetype=tex
au BufRead,BufNewFile *.pl set filetype=prolog " not Perl
au BufRead,BufNewFile rc.conf set filetype=vim

" C-T for a new tab
nnoremap <C-T> :tabnew<cr>
nnoremap <C-W> :tabclose<cr>

" If a folder is specified on input, open NERDTree
autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 1 && isdirectory(argv()[0]) && !exists("s:std_in") | exe 'NERDTree' argv()[0] | wincmd p | ene | endif

" LaTeX Live Preview
let g:livepreview_previewer = 'mupdf'

" LaTeX Snippets
autocmd FileType tex inoremap ;em \emph{} <++><Esc>T{i
autocmd FileType tex inoremap ;bf \textbf{} <++><Esc>T{i
autocmd FileType tex inoremap ;tt \texttt{}<Space><++><Esc>T{i

autocmd FileType tex inoremap ;m \(\)<Space><++><Esc>T(i
autocmd FileType tex inoremap ;M \[\]<Enter><Enter><++><Esc>2k$hi 
autocmd FileType tex inoremap ;ra \rightarrow
autocmd FileType tex inoremap ;la \leftarrow
autocmd FileType tex inoremap ;lra \leftrightarrow

autocmd FileType tex inoremap ;sec \section{}<Enter><Enter><++><Esc>2kf}i
autocmd FileType tex inoremap ;ssec \subsection{}<Enter><Enter><++><Esc>2kf}i
autocmd FileType tex inoremap ;sssec \subsubsection{}<Enter><Enter><++><Esc>2kf}i
autocmd FileType tex inoremap ;up \usepackage{}<Esc>T{i
autocmd FileType tex inoremap ;dc \documentclass{}<Esc>T{i
autocmd FileType tex inoremap ;en \begin{enumerate}[]<Enter><Backspace>\item<Space><++><Enter><Backspace><Backspace>\end{enumerate}<Enter><Enter><++><Esc>4kf]i
autocmd FileType tex inoremap ;it \begin{itemize}<Enter><Enter>\end{itemize}<Enter><Enter><++><Esc>3kA<Tab>\item<Space>

autocmd FileType tex inoremap ;tab \begin{tabular}<Enter><++><Enter>\end{tabular}<Enter><Enter><++><Esc>4kA{}<Esc>i
autocmd FileType tex inoremap ;btab \begin{tabular}<Enter>\toprule<Enter><++><Enter>\midrule<Enter><++><Enter>\bottomrule<Enter>\end{tabular}<Enter><Enter><++><Esc>8kA{}<Esc>i
