#!/bin/bash

set -o nounset
set -o errexit
set -o pipefail

exit_error() {
	echo "$1"
	exit 1
}

green=$'\e[1;32m'
yellow=$'\e[1;33m'
end=$'\e[0m'
show_title() {
	printf "\n%s%s%s\n" "${green}" "$1" "${end}"
}

# Default parameters
FORCE=false

while [[ $# -gt 0 ]]; do
	case $1 in
		-f|--force)
			FORCE=true
			shift
			;;
		*)
			shift
			;;
	esac
done

# Config locations
SHORTCUTS="$HOME/.shortcuts"
folders="$SHORTCUTS/folders.tsv"
configs="$SHORTCUTS/config-files.tsv"

# Output locations
shell_shortcuts="$SHORTCUTS/out/shell"
ranger_conf="$HOME/.config/ranger"
qute_conf="$HOME/.config/qutebrowser"
ranger_shortcuts="$ranger_conf/shortcuts.conf"
qute_shortcuts="$qute_conf/shortcuts.py"

# Fingerprint file
fingerprint="$SHORTCUTS/out/fingerprint"

[ -f "${folders}" ] || exit_error "The folders file does not exist"
[ -f "${configs}" ] || exit_error "The configs file does not exist"

md5new=`cat ${folders} ${configs} $0 | md5sum | awk '{ print $1 }'`

if [[ -f $fingerprint && $md5new == `cat ${fingerprint}` ]]; then
	echo "Input files have not changed since last synchronisation. No work to do."
	exit 0
else
	echo -e "Regenerating output files\n"

	[ -d "$SHORTCUTS/out/" ] || mkdir "$SHORTCUTS/out/"
	[ -d "$ranger_conf" ] || mkdir "$ranger_conf"
	[ -d "$qute_conf" ] || mkdir "$qute_conf"

	# Remove
	rm -f $shell_shortcuts $ranger_shortcuts $qute_shortcuts

	# Directory shortcuts
	sed "/^#/d" $folders | awk 'NF {print "alias "$1"=\"cd "$2"\""}' >> $shell_shortcuts
	sed "/^#/d" $folders | awk 'NF {print "map g"$1" cd "$2"\nmap t"$1" tab_new "$2"\nmap m"$1" shell mv -v %s "$2"\nmap Y"$1" shell cp -rv %s "$2}' >> $ranger_shortcuts
	sed "/^#/d" $folders | awk 'NF {print "config.bind(\";"$1"\", \"set downloads.location.directory "$2" ;; hint links download\")"}' >> $qute_shortcuts
	
	# Dotfile shortcuts
	sed "/^#/d" $configs | awk 'NF {print "alias "$1"=\"$EDITOR "$2"\""}' >> $shell_shortcuts
	sed "/^#/d" $configs | awk 'NF {print "map "$1" shell $EDITOR "$2}' >> $ranger_shortcuts

	printf "%s" "$md5new" > "$fingerprint"
	echo "${green}Done.${end} Fingerprint = $md5new"
fi





